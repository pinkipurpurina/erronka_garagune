{"version":3,"sources":["webpack:///src/app/login/login.page.ts","webpack:///src/app/login/login.page.html","webpack:///src/app/login/login.module.ts","webpack:///src/app/login/login-routing.module.ts","webpack:///src/app/login/login.page.scss"],"names":["LoginPage","formBuilder","authSvc","router","toastController","isSubmitted","ionicForm","group","email","required","pattern","password","valid","login","value","user","getUsers","once","snap","forEach","element","uid","key","navigate","getMonitorUsers","element2","monitorUid","create","message","duration","toast","present","console","log","loginGoogle","controls","selector","template","LoginPageModule","imports","declarations","routes","path","component","LoginPageRoutingModule","forChild","exports"],"mappings":"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","file":"login-login-module-es5.js","sourcesContent":["import { Component, NgModule, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { ToastController } from '@ionic/angular';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],\r\n})\r\n\r\n\r\nexport class LoginPage implements OnInit {\r\n\r\n  ionicForm: FormGroup;\r\n  isSubmitted = false;\r\n\r\n  constructor(public formBuilder: FormBuilder, private authSvc: AuthService, private router: Router, public toastController: ToastController) { }\r\n\r\n  ngOnInit() {\r\n    this.ionicForm = this.formBuilder.group({\r\n      email: ['', [Validators.required, Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$')]],\r\n      // 8 letras, una minuscula, una mayuscula, un numero y un caracter especial\r\n      // password: ['', [Validators.required, Validators.minLength(8), Validators.pattern('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{7,}')]]\r\n      password: ['', [Validators.required]]\r\n    })\r\n  }\r\n\r\n  get errorControl() {\r\n    return this.ionicForm.controls;\r\n  }\r\n\r\n  async onLogin(email, password) {\r\n    try {\r\n      this.isSubmitted = true;\r\n      if (!this.ionicForm.valid) {\r\n        return false;\r\n      } else {\r\n        const user = await this.authSvc.login(email.value, password.value);\r\n        if (user) {\r\n          this.authSvc.getUsers().once(\"value\", (snap) => {\r\n            snap.forEach((element) => {\r\n              var uid = element.key;\r\n              if (user.uid == uid) {\r\n                this.router.navigate(['admin-user-view']);\r\n              }\r\n              this.authSvc.getMonitorUsers(uid).once(\"value\", (snap) => {\r\n                snap.forEach((element2) => {\r\n                  var monitorUid = element2.key;\r\n                  if (user.uid == monitorUid) {\r\n                    this.router.navigate(['user-kategoria']);\r\n                  }\r\n                });\r\n              });\r\n            });\r\n          });\r\n        } else {\r\n          const toast = await this.toastController.create({\r\n            message: 'Email o contraseña incorrecta.',\r\n            duration: 2000\r\n          });\r\n          toast.present();\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log('Error->', error);\r\n    }\r\n  }\r\n\r\n  async onLoginGoogle() {\r\n    try {\r\n      const user = await this.authSvc.loginGoogle();\r\n      if (user) {\r\n        this.router.navigate(['admin-user-view']);\r\n      } else {\r\n        const toast = await this.toastController.create({\r\n          message: 'Email o contraseña incorrecta.',\r\n          duration: 2000\r\n        });\r\n        toast.present();\r\n      }\r\n    } catch (error) {\r\n      console.log('Error->', error);\r\n    }\r\n  }\r\n\r\n  // private redirectUser(isVerified: boolean): void {\r\n  //   if (isVerified) {\r\n  //     this.router.navigate(['admin']);//Redirigir a admin\r\n  //   } else {\r\n  //     this.router.navigate(['verify-email']);//Redirigir a verification page\r\n  //   }\r\n  // }\r\n}","export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-title>login</ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n    <form [formGroup]=\\\"ionicForm\\\" (ngSubmit)=\\\"onLogin(email,password)\\\" novalidate>\\r\\n        <ion-item lines=\\\"full\\\">\\r\\n            <ion-label position=\\\"floating\\\">Email</ion-label>\\r\\n            <ion-input formControlName=\\\"email\\\" type=\\\"text\\\" #email required></ion-input>\\r\\n        </ion-item>\\r\\n        <span class=\\\"red error ion-padding\\\" *ngIf=\\\"isSubmitted && errorControl.email.errors?.required\\\">\\r\\n            Email requerido.\\r\\n        </span>\\r\\n        <span class=\\\"red error ion-padding\\\" *ngIf=\\\"isSubmitted && errorControl.email.errors?.pattern\\\">\\r\\n            Por favor, introduzca un Email valido.\\r\\n        </span>\\r\\n        <ion-item lines=\\\"full\\\">\\r\\n            <ion-label position=\\\"floating\\\">Password</ion-label>\\r\\n            <ion-input formControlName=\\\"password\\\" type=\\\"password\\\" #password required></ion-input>\\r\\n        </ion-item>\\r\\n        <span class=\\\"red error ion-padding\\\" *ngIf=\\\"isSubmitted && errorControl.password.errors?.required\\\">\\r\\n            Contraseña requerida.\\r\\n        </span>\\r\\n        <span class=\\\"red error ion-padding\\\" *ngIf=\\\"isSubmitted && errorControl.password.errors?.pattern\\\">\\r\\n            Por favor, introduzca una contraseña más segura.\\r\\n        </span>\\r\\n        <ion-row>\\r\\n            <ion-col>\\r\\n                <ion-button type=\\\"submit\\\" expand=\\\"block\\\">Login</ion-button>\\r\\n            </ion-col>\\r\\n        </ion-row>\\r\\n    </form>\\r\\n    <span class=\\\"centrado\\\"> or </span>\\r\\n    <ion-row>\\r\\n        <ion-col>\\r\\n            <ion-button type=\\\"submit\\\" color=\\\"danger\\\" (click)=\\\"onLoginGoogle()\\\" expand=\\\"block\\\">Login with google</ion-button>\\r\\n        </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n        <ion-col>\\r\\n            <p class=\\\"centrado\\\">\\r\\n                <a routerLink=\\\"/register\\\">Crear una cuenta</a>\\r\\n            </p>\\r\\n        </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n        <ion-col>\\r\\n            <p class=\\\"centrado\\\">\\r\\n                <a routerLink=\\\"/forgot-password\\\">¿Has olvidado la contraseña?</a>\\r\\n            </p>\\r\\n        </ion-col>\\r\\n    </ion-row>\\r\\n</ion-content>\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LoginPageRoutingModule } from './login-routing.module';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    LoginPageRoutingModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [LoginPage]\r\n})\r\nexport class LoginPageModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LoginPageRoutingModule {}\r\n","export default \".centrado {\\n  display: block;\\n  text-align: center;\\n}\\n\\n.red {\\n  color: red;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXGxvZ2luLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGNBQWM7RUFDZCxrQkFBa0I7QUFDdEI7O0FBRUE7RUFDSSxVQUFVO0FBQ2QiLCJmaWxlIjoibG9naW4ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNlbnRyYWRvIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4ucmVkIHtcclxuICAgIGNvbG9yOiByZWQ7XHJcbn0iXX0= */\";"]}